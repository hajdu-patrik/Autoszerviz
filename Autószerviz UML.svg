<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background: #ffffff; background-color: #ffffff; color-scheme: light;" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2285px" height="1294px" viewBox="-0.5 -0.5 2285 1294" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 OPR/118.0.0.0&quot; version=&quot;27.0.3&quot; scale=&quot;1&quot; border=&quot;0&quot;&gt;&#10;  &lt;diagram name=&quot;1 oldal&quot; id=&quot;GM7QvPSbGeDsEHw3ZGSq&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;4424&quot; dy=&quot;1644&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;0V7n_GBDd2oYPwyqeqhs-7&quot; value=&quot;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Datum&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1270&quot; y=&quot;700&quot; width=&quot;410&quot; height=&quot;340&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;0V7n_GBDd2oYPwyqeqhs-8&quot; value=&quot;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;box-sizing: content-box; -webkit-font-smoothing: antialiased; scrollbar-width: thin; background-color: rgb(248, 249, 250); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;- ev: int&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;- ho: int&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;- nap: int&amp;lt;/div&amp;gt;&amp;lt;/font&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;0V7n_GBDd2oYPwyqeqhs-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;410&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;0V7n_GBDd2oYPwyqeqhs-9&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;0V7n_GBDd2oYPwyqeqhs-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;86&quot; width=&quot;410&quot; height=&quot;10&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;0V7n_GBDd2oYPwyqeqhs-10&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;Datum()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;Datum(e: int, h: int, n: int)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;Datum(d: const Datum&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;~Datum()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;operator=(d: const Datum): Datum&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator==(d: const Datum&amp;amp;amp;) const: bool&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;getEv() const: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;getHo() const: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getNap() const: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ elteltNap(const Datum&amp;amp;amp; d) const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;setDatum(e: int, h: int, n: int): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ parseFromString(const std::string&amp;amp;amp; str): static&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;Datum&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;+ toString() const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const std::string&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;operator&amp;amp;lt;&amp;amp;lt;(os: std::ostream&amp;amp;amp;, d: const Datum&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;0V7n_GBDd2oYPwyqeqhs-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;96&quot; width=&quot;410&quot; height=&quot;244&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-1&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;(abstract) VegzettMuvelet&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-603&quot; y=&quot;1180&quot; width=&quot;423&quot; height=&quot;370&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-2&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- muvelet:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;string&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- idopont: Datum&amp;lt;/font&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- ar: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- akt_kmOra: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;423&quot; height=&quot;74&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;100&quot; width=&quot;423&quot; height=&quot;10&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-4&quot; value=&quot;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ VegzettMuvelet()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ VegzettMuvelet(m: const string&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;d:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Datum, a: int, k: int)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ VegzettMuvelet(vm: const VegzettMuvelet&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ virtual ~VegzettMuvelet()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(vm: const VegzettMuvelet&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;VegzettMuvelet&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getMuvelet() const: const string&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getDatum()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: const Datum&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getAr()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;font style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;getAktKmOra() const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setDatum(d: const Datum&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setAr(a: int): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setMuvelet(m: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setAktKmOra(k: int): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const = 0:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;virtual&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;VegzettMuvelet*&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;) const = 0:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;virtual&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;110&quot; width=&quot;423&quot; height=&quot;260&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-18&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Vizsga&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1130&quot; y=&quot;1430&quot; width=&quot;410&quot; height=&quot;220&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-19&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- sikeres: bool&amp;lt;/font&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;410&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-20&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;410&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-21&quot; value=&quot;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Vizsga()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Vizsga(m: const string&amp;amp;amp;, d: const Datum, &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;a: int, k: int, s: bool)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Vizsga(v: const Vizsga&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~Vizsga()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(v: const Vizsga&amp;amp;amp;): Vizsga&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getSikeres(): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setSikeres(s: bool): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const override:&amp;amp;nbsp;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&amp;quot;&amp;gt;VegzettMuvelet*&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;410&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-22&quot; value=&quot;&amp;lt;font style=&amp;quot;color: light-dark(rgb(221, 221, 221), rgb(255, 255, 255)); font-size: 16px;&amp;quot;&amp;gt;Javitas&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1130&quot; y=&quot;1250&quot; width=&quot;410&quot; height=&quot;170&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-24&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-22&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;410&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-25&quot; value=&quot;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;amp;nbsp;+ Javitas()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Javitas(m: const string&amp;amp;amp;, d: const Datum, a: int, k: int)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Javitas(j: const Javitas&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~Javitas()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(j: const Javitas&amp;amp;amp;): Javitas&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const override:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;VegzettMuvelet*&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;b7wNDDdrfDyTwI-67sP8-22&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;34&quot; width=&quot;410&quot; height=&quot;136&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-31&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.422;exitY=1.003;exitDx=0;exitDy=0;exitPerimeter=0;fontFamily=Helvetica;entryX=-0.006;entryY=0.349;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;0V7n_GBDd2oYPwyqeqhs-10&quot; target=&quot;b7wNDDdrfDyTwI-67sP8-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-296&quot; y=&quot;1300&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-180&quot; y=&quot;1140&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-1097&quot; y=&quot;1228&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-38&quot; value=&quot;&quot; style=&quot;endArrow=block;endFill=1;html=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=top;rounded=0;fontFamily=Helvetica;exitX=0.999;exitY=0.714;exitDx=0;exitDy=0;entryX=-0.005;entryY=0.35;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;b7wNDDdrfDyTwI-67sP8-25&quot; target=&quot;b7wNDDdrfDyTwI-67sP8-4&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-760&quot; y=&quot;1350&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-600&quot; y=&quot;1350&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b7wNDDdrfDyTwI-67sP8-41&quot; value=&quot;&quot; style=&quot;endArrow=block;endFill=1;html=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=top;rounded=0;exitX=1.001;exitY=0.771;exitDx=0;exitDy=0;fontFamily=Helvetica;exitPerimeter=0;entryX=0.126;entryY=1.01;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;b7wNDDdrfDyTwI-67sP8-21&quot; target=&quot;b7wNDDdrfDyTwI-67sP8-4&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-306&quot; y=&quot;1460&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-560&quot; y=&quot;1490&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-550&quot; y=&quot;1613&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-1&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Karbantartas&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1130&quot; y=&quot;1670&quot; width=&quot;410&quot; height=&quot;170&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;410&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-4&quot; value=&quot;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Karbantartas()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Karbantartas(m: const string&amp;amp;amp;,&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;d:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Datum, a: int, k: int)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Karbantartas(k: const Karbantartas&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~Karbantartas()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(k: const Karbantartas&amp;amp;amp;): &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;Karbantartas&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const override:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;VegzettMuvelet*&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;34&quot; width=&quot;410&quot; height=&quot;136&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-5&quot; value=&quot;&quot; style=&quot;endArrow=block;endFill=1;html=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=top;rounded=0;fontFamily=Helvetica;entryX=0.283;entryY=1.006;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1.006;exitY=0.244;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;tq8qExxpxmnx8p4ZAhlo-4&quot; target=&quot;b7wNDDdrfDyTwI-67sP8-4&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-760&quot; y=&quot;1740&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-180&quot; y=&quot;1290&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-483&quot; y=&quot;1737&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; value=&quot;&amp;lt;font face=&amp;quot;Helvetica&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Ugyfel&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-130&quot; y=&quot;1180&quot; width=&quot;460&quot; height=&quot;350&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-8&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- nev: string&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- telefonszam: string&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- email: string&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;460&quot; height=&quot;64&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-9&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;90&quot; width=&quot;460&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-10&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Ugyfel()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Ugyfel(n: const string&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;t: const string&amp;amp;amp;,&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;e: const string&amp;amp;amp;)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Ugyfel(u: const Ugyfel&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~Ugyfel(): virtual&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(u: const Ugyfel&amp;amp;amp;): Ugyfel&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getNev(): const string&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getTelefonszam(): const string&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getEmail(): const string&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setNev(n: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setTelefonszam(t: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setEmail(e: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;virtual&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Ugyfel*&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 12px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;operator&amp;amp;lt;&amp;amp;lt;(os: std::ostream&amp;amp;amp;, u: const Ugyfel&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontFamily=Helvetica;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;460&quot; height=&quot;252&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-13&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Auto&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-830&quot; y=&quot;550&quot; width=&quot;610&quot; height=&quot;590&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-14&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- rendszam: string&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;- marka:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;string&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- tipus:&amp;amp;nbsp;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;string&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- kmOra: int&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- uzembeHelyezes: Datum&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- vegzettSzervizMuveletek: Vector&amp;amp;lt;VegzettMuvelet*&amp;amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- Ugyfel* tulajdonos;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;610&quot; height=&quot;124&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-15&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;150&quot; width=&quot;610&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-16&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Auto()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Auto(r: const std::string&amp;amp;amp;, m: const std::string&amp;amp;amp;, t: const std::string&amp;amp;amp;, k: int);&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;+ Auto(r: const string&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;font style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;m: const string&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;font style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;t: const string&amp;amp;amp;, &amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;k: int, d:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;Datum&amp;amp;amp;, v:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;const Vector&amp;amp;lt;VegzettMuvelet*&amp;amp;gt;&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;u: const Ugyfel*)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Auto(a: const Auto&amp;amp;amp;)&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~Auto(): virtual&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator=(a: const Auto&amp;amp;amp;): Auto&amp;amp;amp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ operator==(a: const Auto&amp;amp;amp;) const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;bool&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getRendszam()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: const string&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getMarka()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: const string&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getTipus()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: const string&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getKmOra()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;int&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getUzembeHelyezes()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: const Datum&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;+ getSzervizMuveletek()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;: Vector&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;lt;VegzettMuvelet*&amp;amp;gt;&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getSzervizMuveletek()&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;font style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Vector&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;&amp;amp;lt;VegzettMuvelet*&amp;amp;gt;&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;getTulajdonos()&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;: &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;Ugyfel*&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;getTulajdonos()&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;: const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Ugyfel*&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setRendszam(r: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setKmOra(k: int): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ setTulajdonos(u: Ugyfel*):&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ clone() const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;virtual&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Auto*&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;+ addVegzettSzerviz(m: VegzettMuvelet*):&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ torolVegzettSzerviz(idx: size_t): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiir(os: ostream&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;operator&amp;amp;lt;&amp;amp;lt;(os: std::ostream&amp;amp;amp;, a: const Auto&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;std::ostream&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-13&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;158&quot; width=&quot;610&quot; height=&quot;432&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-17&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.352;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.616;entryY=1.005;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;b7wNDDdrfDyTwI-67sP8-1&quot; target=&quot;tq8qExxpxmnx8p4ZAhlo-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;40&quot; y=&quot;1200&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;200&quot; y=&quot;1200&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-18&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;SzervizNyilvantartoRendszer&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-180&quot; y=&quot;550&quot; width=&quot;530&quot; height=&quot;490&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-19&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- ugyfelek: Vector&amp;amp;lt;Ugyfel&amp;amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- autok: Vector&amp;amp;lt;Auto&amp;amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;530&quot; height=&quot;44&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-20&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;70&quot; width=&quot;530&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-21&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ SzervizNyilvantartoRendszer()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ SzervizNyilvantartoRendszer(a: const Auto&amp;amp;amp;,&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;u:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;Ugyfel&amp;amp;amp;)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;+ SzervizNyilvantartoRendszer(v: const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;SzervizNyilvantartoRendszer&amp;amp;amp;)&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ~SzervizNyilvantartoRendszer()&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getAutok():&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;Vector&amp;amp;lt;Auto&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getAutok() const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const Vector&amp;amp;lt;Auto&amp;amp;gt;&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getUgyfelek():&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;Vector&amp;amp;lt;Ugyfel&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ getUgyfelek() const: const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;Vector&amp;amp;lt;Ugyfel&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ujUgyfel(u: const Ugyfel&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ujAuto(a: const Auto&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ frissitAuto(a: const Auto&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ frissitUgyfel(u: const Ugyfel&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ torolAuto(r: const string&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ torolUgyfel(n: const string&amp;amp;amp;): bool&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ torolMuvelet(r: const std::string&amp;amp;amp;, d: const Datum&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;bool&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ keresUgyfel(u: const string&amp;amp;amp;):&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;Ugyfel&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ keresAuto(e: const string&amp;amp;amp;):&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;rgba(0, 0, 0, 0)&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;Auto&amp;amp;amp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;vanAuto(r: const std::string&amp;amp;amp;) const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;bool&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;vanUgyfel(n: const std::string&amp;amp;amp;) const:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;bool&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ rogzitesVegzettMuvelet(r: const string&amp;amp;amp;,&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;m:&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;const&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;VegzettMuvelet):&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;bool&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ lekeroVegzettMuvelet(r: const string&amp;amp;amp;)&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;const&amp;lt;/span&amp;gt;&amp;lt;font style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ figyelmeztetesek(a: const Auto&amp;amp;amp;) const:&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; font-size: 14px;&amp;quot;&amp;gt;void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ mentesFajlba(f: const string&amp;amp;amp;) const: void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ betoltesFajlbol(f: const string&amp;amp;amp;): void&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;tq8qExxpxmnx8p4ZAhlo-18&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;78&quot; width=&quot;530&quot; height=&quot;412&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-22&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.226;entryY=1.005;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.152;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; target=&quot;tq8qExxpxmnx8p4ZAhlo-21&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-50&quot; y=&quot;1177&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-260&quot; y=&quot;910&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-23&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=1.002;exitY=0.275;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.003;entryY=0.473;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;tq8qExxpxmnx8p4ZAhlo-16&quot; target=&quot;tq8qExxpxmnx8p4ZAhlo-21&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;30&quot; y=&quot;1020&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-109&quot; y=&quot;913&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;tq8qExxpxmnx8p4ZAhlo-25&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=-0.002;entryY=0.343;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;0V7n_GBDd2oYPwyqeqhs-7&quot; target=&quot;tq8qExxpxmnx8p4ZAhlo-14&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-430&quot; y=&quot;1050&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-270&quot; y=&quot;1050&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-1065&quot; y=&quot;620&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;YOWVM_Dfp2D3lqvhb6mg-1&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.065;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;entryX=1.004;entryY=0.928;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;tq8qExxpxmnx8p4ZAhlo-7&quot; target=&quot;tq8qExxpxmnx8p4ZAhlo-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-100&quot; y=&quot;1146&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-240&quot; y=&quot;1130&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-100&quot; y=&quot;1110&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-1&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Applikacio&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;414&quot; y=&quot;1040&quot; width=&quot;140&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-2&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;applikacio(): void&amp;lt;/font&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;LQCTZ_gMf8q1peyGAlmS-1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-7&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;MainSegedFuggvenyei&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;414&quot; y=&quot;550&quot; width=&quot;600&quot; height=&quot;428&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-10&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiirASCII1(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiirASCII2(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ menuOpciok(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ varakozasEnterre(o: const string): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ torolKonzol(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ toroloMajdCim(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ varakozasTorol(): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ helyesRendszamFormatum(rendszam: const string): bool&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ letezikAFajl(f: const string): bool&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ bekerDatum(): Datum&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ sorBeker(t: const string): string&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ muveletFuttato(muvelet: MuveletAllapot (MainSegedFuggvenyei::)(Szerviz&amp;amp;amp;), aDB: SzervizNyilvantartoRendszer&amp;amp;amp;, sikerUzenet: const string): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ fajlMuveletFuttato(muvelet: MuveletAllapot (MainSegedFuggvenyei::)(bool, Szerviz&amp;amp;amp;), aDB: SzervizNyilvantartoRendszer&amp;amp;amp;, tipus: bool, sikerUzenet: const string): void&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ kiListazo(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ugyfelAutoAdd(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ugyfelAutoFrissit(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ugyfelAutoTorlo(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ugyfelKereses(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ autoKereses(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ ujSzervizMuvelet(aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ fajlHelyessegBiztosito(mentesE: bool, aDB: SzervizNyilvantartoRendszer): MuveletAllapot&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;LQCTZ_gMf8q1peyGAlmS-7&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;600&quot; height=&quot;402&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-13&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=1.002;exitY=0.412;exitDx=0;exitDy=0;exitPerimeter=0;fontFamily=Helvetica;entryX=-0.002;entryY=0.55;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;tq8qExxpxmnx8p4ZAhlo-21&quot; target=&quot;LQCTZ_gMf8q1peyGAlmS-10&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;380&quot; y=&quot;1000&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;871&quot; y=&quot;1191&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-16&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;fontFamily=Helvetica;entryX=0.117;entryY=1.006;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;LQCTZ_gMf8q1peyGAlmS-1&quot; target=&quot;LQCTZ_gMf8q1peyGAlmS-10&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;640&quot; y=&quot;1021&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;738&quot; y=&quot;1020&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-17&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Teszt&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;610&quot; y=&quot;1040&quot; width=&quot;404&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-18&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&amp;quot;&amp;gt;+ tesztDBLetrehozas(aDB: SzervizNyilvantartoRendszer): bool&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;&amp;quot;&amp;gt;+ tesztek(): void&amp;lt;/pre&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;LQCTZ_gMf8q1peyGAlmS-17&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;404&quot; height=&quot;44&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;LQCTZ_gMf8q1peyGAlmS-19&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;fontFamily=Helvetica;entryX=0.117;entryY=1.006;entryDx=0;entryDy=0;entryPerimeter=0;&quot; parent=&quot;1&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;760&quot; y=&quot;1040&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;760&quot; y=&quot;980&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-7&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;Vector&amp;lt;/font&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;414&quot; y=&quot;1150&quot; width=&quot;420&quot; height=&quot;680&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-8&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- kapacitas: size_t&amp;lt;br&amp;gt;- meret: size_t&amp;lt;br&amp;gt;- tomb: T*&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;pre style=&amp;quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;- copy_elements(const Vector&amp;amp;amp; src): void&amp;lt;br&amp;gt;- copy_elements_impl(const Vector&amp;amp;amp; src, std::true_type): void&amp;lt;br&amp;gt;- copy_elements_impl(const Vector&amp;amp;amp; src, std::false_type): void&amp;lt;br&amp;gt;- delete_elements(): void&amp;lt;br&amp;gt;- delete_elements_impl(std::true_type): void&amp;lt;br&amp;gt;- delete_elements_impl(std::false_type): void&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;nTeZpao95qQfzeXdizB5-7&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;420&quot; height=&quot;164&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-9&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;nTeZpao95qQfzeXdizB5-7&quot;&gt;&#10;          &lt;mxGeometry y=&quot;190&quot; width=&quot;420&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-10&quot; value=&quot;&amp;lt;pre style=&amp;quot;font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;+ Vector()&amp;lt;br&amp;gt;+ Vector(const Vector&amp;amp;amp; v)&amp;lt;br&amp;gt;+ ~Vector()&amp;lt;br&amp;gt;+ begin(): T*&amp;lt;br&amp;gt;+ begin() const: const T*&amp;lt;br&amp;gt;+ end(): T*&amp;lt;br&amp;gt;+ end() const: const T*&amp;lt;br&amp;gt;+ operator=(const Vector&amp;amp;amp; v): Vector&amp;amp;amp;&amp;lt;br&amp;gt;+ operator==(const Vector&amp;amp;amp; v) const: bool&amp;lt;br&amp;gt;+ operator[](size_t idx): T&amp;amp;amp;&amp;lt;br&amp;gt;+ operator[](size_t idx) const: const T&amp;amp;amp;&amp;lt;br&amp;gt;+ size() const: size_t&amp;lt;br&amp;gt;+ capacity() const: size_t&amp;lt;br&amp;gt;+ empty() const: bool&amp;lt;br&amp;gt;+ resize(size_t ns, const T&amp;amp;amp; v = T()): void&amp;lt;br&amp;gt;+ reserve(size_t m): void&amp;lt;br&amp;gt;+ shrink_to_fit(): void&amp;lt;br&amp;gt;+ at(size_t idx): T&amp;amp;amp;&amp;lt;br&amp;gt;+ at(size_t idx) const: const T&amp;amp;amp;&amp;lt;br&amp;gt;+ front(): T&amp;amp;amp;&amp;lt;br&amp;gt;+ front() const: const T&amp;amp;amp;&amp;lt;br&amp;gt;+ back(): T&amp;amp;amp;&amp;lt;br&amp;gt;+ back() const: const T&amp;amp;amp;&amp;lt;br&amp;gt;+ push_back(const T&amp;amp;amp; v): void&amp;lt;br&amp;gt;+ pop_back(): void&amp;lt;br&amp;gt;+ insert(T* p, const T&amp;amp;amp; v): T*&amp;lt;br&amp;gt;+ erase(T* p): T*&amp;lt;br&amp;gt;+ clear(): void&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/pre&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;nTeZpao95qQfzeXdizB5-7&quot;&gt;&#10;          &lt;mxGeometry y=&quot;198&quot; width=&quot;420&quot; height=&quot;482&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-12&quot; value=&quot;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;810&quot; y=&quot;1125&quot; width=&quot;24&quot; height=&quot;25&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-23&quot; value=&quot;T&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;807&quot; y=&quot;1122.5&quot; width=&quot;30&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-24&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.226;entryY=1.005;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.002;exitY=0.011;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;nTeZpao95qQfzeXdizB5-7&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;410&quot; y=&quot;1160&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;310&quot; y=&quot;1042&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;310&quot; y=&quot;1157&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;nTeZpao95qQfzeXdizB5-25&quot; value=&quot;&quot; style=&quot;endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.381;exitY=-0.002;exitDx=0;exitDy=0;fontFamily=Helvetica;entryX=0.262;entryY=1.013;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;nTeZpao95qQfzeXdizB5-7&quot; target=&quot;LQCTZ_gMf8q1peyGAlmS-10&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;494&quot; y=&quot;1050&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;494&quot; y=&quot;990&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><rect fill="#ffffff" width="100%" height="100%" x="0" y="0" style="fill: rgb(255, 255, 255);"/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="0V7n_GBDd2oYPwyqeqhs-7"><g><path d="M 0 176 L 0 150 L 410 150 L 410 176" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 0 176 L 0 490 L 410 490 L 410 176" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 0 176 L 410 176" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 408px; height: 1px; padding-top: 157px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;" face="Helvetica">Datum</font></div></div></div></foreignObject><text x="205" y="169" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Datum</text></switch></g></g><g data-cell-id="0V7n_GBDd2oYPwyqeqhs-8"><g><rect x="0" y="176" width="410" height="60" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 183px; margin-left: 6px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 56px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="box-sizing: content-box; -webkit-font-smoothing: antialiased; scrollbar-width: thin; background-color: light-dark(rgb(248, 249, 250), rgb(22, 23, 24)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;" face="Helvetica"><div style="">- ev: int</div><div style="">- ho: int</div><div style="">- nap: int</div></font></div></div></div></foreignObject><text x="6" y="195" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- ev: int...</text></switch></g></g></g><g data-cell-id="0V7n_GBDd2oYPwyqeqhs-9"><g><path d="M 0 241 L 410 241" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="0V7n_GBDd2oYPwyqeqhs-10"><g><rect x="0" y="246" width="410" height="244" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 253px; margin-left: 6px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 240px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>Datum()</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>Datum(e: int, h: int, n: int)</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>Datum(d: const Datum&amp;)</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>~Datum()</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>operator=(d: const Datum): Datum&amp;</font></div><div><font style=""><span style="font-size: 14px;">+ operator==(d: const Datum&amp;) const: bool</span></font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>getEv() const: int</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>getHo() const: int</font></div><div><font style="font-size: 14px;">+ getNap() const: int</font></div><div><font style=""><span style="font-size: 14px;">+ elteltNap(const Datum&amp; d) const: </span></font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">int</span></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span>setDatum(e: int, h: int, n: int): void</font></div><div><font style=""><span style="font-size: 14px;">+ parseFromString(const std::string&amp; str): static </span></font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">Datum</span></div><div><span style="background-color: transparent; font-size: 14px;">+ toString() const: </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const std::string</span></div><div><span style="font-size: 14px;">operator&lt;&lt;(os: std::ostream&amp;, d: const Datum&amp;): </span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;">std::ostream&amp;</span></div></div></div></div></foreignObject><text x="6" y="265" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Datum()...</text></switch></g></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-1"><g><path d="M 667 656 L 667 630 L 1090 630 L 1090 656" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 667 656 L 667 1000 L 1090 1000 L 1090 656" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 667 656 L 1090 656" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 421px; height: 1px; padding-top: 637px; margin-left: 668px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">(abstract) VegzettMuvelet</font></div></div></div></foreignObject><text x="879" y="649" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">(abstract) VegzettMuvelet</text></switch></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-2"><g><rect x="667" y="656" width="423" height="74" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 413px; height: 1px; padding-top: 663px; margin-left: 673px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 70px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;" face="Helvetica">- muvelet: </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">string</span></div><font style="font-size: 14px;" face="Helvetica">- idopont: Datum</font><div><font style="font-size: 14px;" face="Helvetica">- ar: int</font></div><div><font style="font-size: 14px;" face="Helvetica">- akt_kmOra: int</font></div></div></div></div></foreignObject><text x="673" y="675" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- muvelet: string- idopont: Datum...</text></switch></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-3"><g><path d="M 667 735 L 1090 735" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-4"><g><rect x="667" y="740" width="423" height="260" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 413px; height: 1px; padding-top: 747px; margin-left: 673px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 256px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div style=""><div><font style="font-size: 14px;">+ VegzettMuvelet()</font></div><div><font style="font-size: 14px;">+ VegzettMuvelet(m: const string&amp;, </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">d: </span><span style="background-color: transparent; font-size: 14px;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Datum, a: int, k: int)</span></div><div><font style="font-size: 14px;">+ VegzettMuvelet(vm: const VegzettMuvelet&amp;)</font></div><div><font style="font-size: 14px;">+ virtual ~VegzettMuvelet()</font></div><div><font style="font-size: 14px;">+ operator=(vm: const VegzettMuvelet&amp;): </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">VegzettMuvelet&amp;</span></div><div><font style="font-size: 14px;">+ getMuvelet() const: const string&amp;</font></div><div><font style="font-size: 14px;">+ getDatum() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: const Datum&amp;</span></div><div><font style="font-size: 14px;">+ getAr() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><font style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">: </font><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">int</span></div><div><span style="font-size: 14px;">+ </span><span style="background-color: transparent; font-size: 14px;">getAktKmOra() const: </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">int</span></div><div><font style="font-size: 14px;">+ setDatum(d: const Datum&amp;): void</font></div><div><font style="font-size: 14px;">+ setAr(a: int): void</font></div><div><font style="font-size: 14px;">+ setMuvelet(m: const string&amp;): void</font></div><div><font style="font-size: 14px;">+ setAktKmOra(k: int): void</font></div><div><font style="font-size: 14px;">+ clone() const = 0: </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">virtual</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">VegzettMuvelet*</span></div><div><font style="font-size: 14px;">+ kiir(os: ostream&amp;) const = 0: </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">virtual</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">void</span></div></div></div></div></div></foreignObject><text x="673" y="759" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ VegzettMuvelet()...</text></switch></g></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-18"><g><path d="M 140 906 L 140 880 L 550 880 L 550 906" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 140 906 L 140 1100 L 550 1100 L 550 906" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 140 906 L 550 906" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 408px; height: 1px; padding-top: 887px; margin-left: 141px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">Vizsga</font></div></div></div></foreignObject><text x="345" y="899" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Vizsga</text></switch></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-19"><g><rect x="140" y="906" width="410" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 913px; margin-left: 146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 22px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 14px;">- sikeres: bool</font></div></div></div></foreignObject><text x="146" y="925" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- sikeres: bool</text></switch></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-20"><g><path d="M 140 936 L 550 936" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-21"><g><rect x="140" y="940" width="410" height="160" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 947px; margin-left: 146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 156px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div style=""><div><font style="font-size: 14px;">+ Vizsga()</font></div><div><font style="font-size: 14px;">+ Vizsga(m: const string&amp;, d: const Datum, </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">a: int, k: int, s: bool)</span></div><div><font style="font-size: 14px;">+ Vizsga(v: const Vizsga&amp;)</font></div><div><font style="font-size: 14px;">+ ~Vizsga()</font></div><div><font style="font-size: 14px;">+ operator=(v: const Vizsga&amp;): Vizsga&amp;</font></div><div><font style="font-size: 14px;">+ getSikeres(): bool</font></div><div><font style="font-size: 14px;">+ setSikeres(s: bool): void</font></div><div><font style="font-size: 14px;">+ clone() const override: <span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;">VegzettMuvelet*</span></font></div><div><font style="font-size: 14px;">+ kiir(os: ostream&amp;): void</font></div></div></div></div></div></foreignObject><text x="146" y="959" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Vizsga()...</text></switch></g></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-22"><g><path d="M 140 726 L 140 700 L 550 700 L 550 726" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 140 726 L 140 870 L 550 870 L 550 726" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 140 726 L 550 726" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 408px; height: 1px; padding-top: 707px; margin-left: 141px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="color: light-dark(rgb(221, 221, 221), rgb(255, 255, 255)); font-size: 16px;">Javitas</font></div></div></div></foreignObject><text x="345" y="719" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Javitas</text></switch></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-24"><g><path d="M 140 730 L 550 730" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-25"><g><rect x="140" y="734" width="410" height="136" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 741px; margin-left: 146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 132px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div style=""><div><font style="font-size: 14px;"> + Javitas()</font></div><div><font style="font-size: 14px;">+ Javitas(m: const string&amp;, d: const Datum, a: int, k: int)</font></div><div><font style="font-size: 14px;">+ Javitas(j: const Javitas&amp;)</font></div><div><font style="font-size: 14px;">+ ~Javitas()</font></div><div><font style="font-size: 14px;">+ operator=(j: const Javitas&amp;): Javitas&amp;</font></div><div><font style=""><span style="font-size: 14px;">+ clone() const override: </span></font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">VegzettMuvelet*</span></div><div><font style="font-size: 14px;">+ kiir(os: ostream&amp;): void</font></div></div></div></div></div></foreignObject><text x="146" y="753" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Javitas()...</text></switch></g></g></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-31"><g><path d="M 173.02 490.73 L 173 678 L 638.48 681.62" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 663.48 681.82 L 650.92 689.07 L 638.48 681.62 L 651.03 674.37 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-38"><g><path d="M 549.59 831.1 L 608.6 831.2 L 656.77 831.03" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 663.77 831 L 656.78 834.53 L 656.75 827.53 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="b7wNDDdrfDyTwI-67sP8-41"><g><path d="M 550.41 1063.36 L 720.4 1063.4 L 720.31 1010.72" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 720.3 1003.72 L 723.81 1010.71 L 716.81 1010.72 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-1"><g><path d="M 140 1146 L 140 1120 L 550 1120 L 550 1146" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 140 1146 L 140 1290 L 550 1290 L 550 1146" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 140 1146 L 550 1146" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 408px; height: 1px; padding-top: 1127px; margin-left: 141px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">Karbantartas</font></div></div></div></foreignObject><text x="345" y="1139" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Karbantartas</text></switch></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-3"><g><path d="M 140 1150 L 550 1150" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-4"><g><rect x="140" y="1154" width="410" height="136" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 400px; height: 1px; padding-top: 1161px; margin-left: 146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 132px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div style=""><font style="font-size: 14px;">+ Karbantartas()</font></div><div style=""><font style="font-size: 14px;">+ Karbantartas(m: const string&amp;,</font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> d: </span><span style="background-color: transparent; font-size: 14px;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Datum, a: int, k: int)</span></div><div style=""><font style="font-size: 14px;">+ Karbantartas(k: const Karbantartas&amp;)</font></div><div style=""><font style="font-size: 14px;">+ ~Karbantartas()</font></div><div style=""><font style="font-size: 14px;">+ operator=(k: const Karbantartas&amp;): </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">Karbantartas&amp;</span></div><div style=""><span style="font-size: 14px;">+ clone() const override: </span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;">VegzettMuvelet*</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"></span></div><div style=""><font style="font-size: 14px;">+ kiir(os: ostream&amp;): void</font></div></div></div></div></foreignObject><text x="146" y="1173" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Karbantartas()...</text></switch></g></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-5"><g><path d="M 552.46 1187.18 L 786.8 1187.2 L 786.71 1009.68" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 786.71 1002.68 L 790.21 1009.68 L 783.21 1009.68 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-7"><g><path d="M 1140 656 L 1140 630 L 1600 630 L 1600 656" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 1140 656 L 1140 980 L 1600 980 L 1600 656" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1140 656 L 1600 656" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 458px; height: 1px; padding-top: 637px; margin-left: 1141px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;" face="Helvetica">Ugyfel</font></div></div></div></foreignObject><text x="1370" y="649" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Ugyfel</text></switch></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-8"><g><rect x="1140" y="656" width="460" height="64" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 450px; height: 1px; padding-top: 663px; margin-left: 1146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 60px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;">- nev: string</font></div><div><font style="font-size: 14px;">- telefonszam: string</font></div><div><font style="font-size: 14px;">- email: string</font></div></div></div></div></foreignObject><text x="1146" y="675" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- nev: string...</text></switch></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-9"><g><path d="M 1140 724 L 1600 724" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-10"><g><rect x="1140" y="728" width="460" height="252" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 450px; height: 1px; padding-top: 735px; margin-left: 1146px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 248px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;">+ Ugyfel()</font></div><div><font style="font-size: 14px;">+ Ugyfel(n: const string&amp;, </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">t: const string&amp;,</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> e: const string&amp;)</span></div><div><font style="font-size: 14px;">+ Ugyfel(u: const Ugyfel&amp;)</font></div><div><font style="font-size: 14px;">+ ~Ugyfel(): virtual</font></div><div><font style="font-size: 14px;">+ operator=(u: const Ugyfel&amp;): Ugyfel&amp;</font></div><div><font style="font-size: 14px;">+ getNev(): const string&amp;</font></div><div><font style="font-size: 14px;">+ getTelefonszam(): const string&amp;</font></div><div><font style="font-size: 14px;">+ getEmail(): const string&amp;</font></div><div><font style="font-size: 14px;">+ setNev(n: const string&amp;): void</font></div><div><font style="font-size: 14px;">+ setTelefonszam(t: const string&amp;): void</font></div><div><font style="font-size: 14px;">+ setEmail(e: const string&amp;): void</font></div><div><font style="font-size: 14px;">+ clone() const: </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">virtual</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Ugyfel*</span></div><div><font style="font-size: 14px;">+ kiir(os: ostream&amp;): void</font></div><div><font style="font-size: 14px;"><font style="font-size: 12px;"><span style="font-size: 14px;">operator&lt;&lt;(os: std::ostream&amp;, u: const Ugyfel&amp;): </span></font><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;">std::ostream&amp;</span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;"> </span></font></div></div></div></div></foreignObject><text x="1146" y="747" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Ugyfel()...</text></switch></g></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-13"><g><path d="M 440 26 L 440 0 L 1050 0 L 1050 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 440 26 L 440 590 L 1050 590 L 1050 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 440 26 L 1050 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 608px; height: 1px; padding-top: 7px; margin-left: 441px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">Auto</font></div></div></div></foreignObject><text x="745" y="19" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Auto</text></switch></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-14"><g><rect x="440" y="26" width="610" height="124" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 600px; height: 1px; padding-top: 33px; margin-left: 446px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 120px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;">- rendszam: string</font></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">- marka: </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">string</span></font></div><div><font style="font-size: 14px;">- tipus: <span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">string</span></font></div><div><font style="font-size: 14px;">- kmOra: int</font></div><div><font style="font-size: 14px;">- uzembeHelyezes: Datum</font></div><div><font style="font-size: 14px;">- vegzettSzervizMuveletek: Vector&lt;VegzettMuvelet*&gt;</font></div><div><font style="font-size: 14px;">- Ugyfel* tulajdonos;</font></div></div></div></div></foreignObject><text x="446" y="45" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- rendszam: string...</text></switch></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-15"><g><path d="M 440 154 L 1050 154" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-16"><g><rect x="440" y="158" width="610" height="432" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 600px; height: 1px; padding-top: 165px; margin-left: 446px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 428px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;">+ Auto()</font></div><div><font style=""><span style="font-size: 14px;">+ Auto(r: const std::string&amp;, m: const std::string&amp;, t: const std::string&amp;, k: int);</span></font></div><div><font style="font-size: 14px;"><font style="">+ Auto(r: const string&amp;, </font><font style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">m: const string&amp;, </font><font style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">t: const string&amp;, </font><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">k: int, d: </span><span style="background-color: transparent;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">Datum&amp;, v: </span></font><span style="background-color: transparent; font-size: 14px;">const Vector&lt;VegzettMuvelet*&gt;&amp;, </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">u: const Ugyfel*)</span></div><div><font style="font-size: 14px;">+ Auto(a: const Auto&amp;)</font></div><div><font style="font-size: 14px;">+ ~Auto(): virtual</font></div><div><font style="font-size: 14px;">+ operator=(a: const Auto&amp;): Auto&amp;</font></div><div><font style=""><span style="font-size: 14px;">+ operator==(a: const Auto&amp;) const: </span><span style="font-size: 14px;">bool</span></font></div><div><font style="font-size: 14px;">+ getRendszam() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: const string&amp;</span></div><div><font style="font-size: 14px;">+ getMarka() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: const string&amp;</span></div><div><font style="font-size: 14px;">+ getTipus() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: const string&amp;</span></div><div><font style="font-size: 14px;">+ getKmOra() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">int</span></div><div><font style="font-size: 14px;">+ getUzembeHelyezes() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: const Datum&amp;</span></div><div><font style="font-size: 14px;"><font style="">+ getSzervizMuveletek() </font></font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><font style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">: Vector</font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">&lt;VegzettMuvelet*&gt;&amp;</span></div><div><font style="font-size: 14px;">+ getSzervizMuveletek() </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><font style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">: </font><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Vector</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">&lt;VegzettMuvelet*&gt;&amp;</span></div><div><font style="font-size: 14px;">+ </font><span style="background-color: transparent; font-size: 14px;">getTulajdonos()</span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;">: </span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;">Ugyfel*</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;"></span></div><div><font style="font-size: 14px;"><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+ </span></font><span style="background-color: transparent; font-size: 14px;">getTulajdonos()  </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">: const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Ugyfel*</span></div><div><font style="font-size: 14px;">+ setRendszam(r: const string&amp;): void</font></div><div><span style="font-size: 14px;">+ setKmOra(k: int): void</span></div><div><font style="font-size: 14px;">+ setTulajdonos(u: Ugyfel*): </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">void</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ clone() const: </span></span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">virtual</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">  </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Auto*</span></div><div><font style="font-size: 14px;"><font style="">+ addVegzettSzerviz(m: VegzettMuvelet*): </font><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">void</span></font></div><div><font style="font-size: 14px;">+ torolVegzettSzerviz(idx: size_t): void</font></div><div><font style="font-size: 14px;">+ kiir(os: ostream&amp;): void</font></div><div><font style=""><span style="font-size: 14px;">operator&lt;&lt;(os: std::ostream&amp;, a: const Auto&amp;): </span></font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">std::ostream&amp;</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div></div></div></div></foreignObject><text x="446" y="177" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Auto()...</text></switch></g></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-17"><g><path d="M 815.9 630 L 815.85 618.15" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 815.76 593.15 L 823.16 605.62 L 815.85 618.15 L 808.46 605.67 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-18"><g><path d="M 1090 26 L 1090 0 L 1620 0 L 1620 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 1090 26 L 1090 490 L 1620 490 L 1620 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1090 26 L 1620 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 528px; height: 1px; padding-top: 7px; margin-left: 1091px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">SzervizNyilvantartoRendszer</font></div></div></div></foreignObject><text x="1355" y="19" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">SzervizNyilvantartoRendszer</text></switch></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-19"><g><rect x="1090" y="26" width="530" height="44" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 33px; margin-left: 1096px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 40px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><div><font style="font-size: 14px;">- ugyfelek: Vector&lt;Ugyfel&gt;</font></div><div><font style="font-size: 14px;">- autok: Vector&lt;Auto&gt;</font></div></div></div></div></div></foreignObject><text x="1096" y="45" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- ugyfelek: Vector&lt;Ugyfel&gt;...</text></switch></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-20"><g><path d="M 1090 74 L 1620 74" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-21"><g><rect x="1090" y="78" width="530" height="412" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 85px; margin-left: 1096px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 408px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><font style="font-size: 14px;">+ SzervizNyilvantartoRendszer()</font></div><div><font style="font-size: 14px;">+ SzervizNyilvantartoRendszer(a: const Auto&amp;, </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">u: </span><span style="background-color: transparent; font-size: 14px;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">Ugyfel&amp;)</span></div><div><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">+ SzervizNyilvantartoRendszer(v: const </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">SzervizNyilvantartoRendszer&amp;)</span></div><div><font style="font-size: 14px;">+ ~SzervizNyilvantartoRendszer()</font></div><div><font style="font-size: 14px;">+ getAutok(): </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">Vector&lt;Auto&gt;</span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ getAutok() const: </span></span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const Vector&lt;Auto&gt;&amp;</span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ getUgyfelek(): </span></span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">Vector&lt;Ugyfel&gt;</span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ getUgyfelek() const: const </span></span><span style="color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent; font-size: 14px;">Vector&lt;Ugyfel&gt;</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"></span></div><div><font style="font-size: 14px;">+ ujUgyfel(u: const Ugyfel&amp;): bool</font></div><div><font style="font-size: 14px;">+ ujAuto(a: const Auto&amp;): bool</font></div><div><font style="font-size: 14px;">+ frissitAuto(a: const Auto&amp;): bool</font></div><div><font style="font-size: 14px;">+ frissitUgyfel(u: const Ugyfel&amp;): bool</font></div><div><font style="font-size: 14px;">+ torolAuto(r: const string&amp;): bool</font></div><div><font style="font-size: 14px;">+ torolUgyfel(n: const string&amp;): bool</font></div><div><font style="font-size: 14px;">+ torolMuvelet(r: const std::string&amp;, d: const Datum&amp;): </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">bool</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div><div><font style="font-size: 14px;">+ keresUgyfel(u: const string&amp;): </font><span style="background-color: transparent; font-size: 14px;">Ugyfel&amp;</span></div><div><font style="font-size: 14px;">+ keresAuto(e: const string&amp;):</font><span style="background-color: transparent;"><font color="rgba(0, 0, 0, 0)" style="color: light-dark(rgba(0, 0, 0, 0), rgb(237, 237, 237));"><span style="font-size: 14px;"> </span></font><span style="font-size: 14px;">Auto&amp;</span></span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ </span></span><span style="background-color: transparent; font-size: 14px;">vanAuto(r: const std::string&amp;) const: </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">bool</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div><div><span style="background-color: transparent;"><span style="font-size: 14px;">+ </span></span><span style="background-color: transparent; font-size: 14px;">vanUgyfel(n: const std::string&amp;) const: </span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">bool</span><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div><div><font style="font-size: 14px;">+ rogzitesVegzettMuvelet(r: const string&amp;,</font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> m: </span><span style="background-color: transparent; font-size: 14px;">const </span><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">VegzettMuvelet): </span><span style="background-color: transparent; font-size: 14px;">bool</span></div><div><font style="font-size: 14px;">+ lekeroVegzettMuvelet(r: const string&amp;) </font><span style="font-size: 14px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">const</span><font style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">: </font><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 14px;">void</span></div><div><font style="font-size: 14px;">+ figyelmeztetesek(a: const Auto&amp;) const: </font><span style="background-color: transparent; font-size: 14px;">void</span></div><div><font style="font-size: 14px;">+ mentesFajlba(f: const string&amp;) const: void</font></div><div><font style="font-size: 14px;">+ betoltesFajlbol(f: const string&amp;): void</font></div></div></div></div></foreignObject><text x="1096" y="97" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ SzervizNyilvantartoRendszer()...</text></switch></g></g></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-22"><g><path d="M 1209.92 630 L 1209.81 518.05" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1209.78 493.05 L 1217.15 505.54 L 1209.81 518.05 L 1202.44 505.55 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-23"><g><path d="M 1051.22 276.8 L 1065.73 275.39" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1090.61 272.97 L 1078.88 281.5 L 1065.73 275.39 L 1077.46 266.86 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="tq8qExxpxmnx8p4ZAhlo-25"><g><path d="M 205 150 L 205 70 L 412.79 68.7" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 437.79 68.54 L 425.34 75.97 L 412.79 68.7 L 425.25 61.26 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="YOWVM_Dfp2D3lqvhb6mg-1"><g><path d="M 1169.9 630 L 1170 560 L 1078.43 559.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1053.43 558.91 L 1065.99 551.67 L 1078.43 559.14 L 1065.86 566.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-1"><g><path d="M 1684 516 L 1684 490 L 1824 490 L 1824 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/><path d="M 1684 516 L 1684 542 L 1824 542 L 1824 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1684 516 L 1824 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 503px; margin-left: 1685px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;"><b>Applikacio</b></font></div></div></div></foreignObject><text x="1754" y="507" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">Applikacio</text></switch></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-2"><g><rect x="1684" y="516" width="140" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 130px; height: 1px; padding-top: 523px; margin-left: 1690px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 22px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 14px;">applikacio(): void</font></div></div></div></foreignObject><text x="1690" y="535" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">applikacio(): void</text></switch></g></g></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-7"><g><path d="M 1684 26 L 1684 0 L 2284 0 L 2284 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 1684 26 L 1684 428 L 2284 428 L 2284 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1684 26 L 2284 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 598px; height: 1px; padding-top: 7px; margin-left: 1685px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">MainSegedFuggvenyei</font></div></div></div></foreignObject><text x="1984" y="19" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">MainSegedFuggvenyei</text></switch></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-10"><g><rect x="1684" y="26" width="600" height="402" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 33px; margin-left: 1690px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 398px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><span style="font-size: 14px;">+ kiirASCII1(): void</span></div><div><span style="font-size: 14px;">+ kiirASCII2(): void</span></div><div><span style="font-size: 14px;">+ menuOpciok(): void</span></div><div><span style="font-size: 14px;">+ varakozasEnterre(o: const string): void</span></div><div><span style="font-size: 14px;">+ torolKonzol(): void</span></div><div><span style="font-size: 14px;">+ toroloMajdCim(): void</span></div><div><span style="font-size: 14px;">+ varakozasTorol(): void</span></div><div><span style="font-size: 14px;">+ helyesRendszamFormatum(rendszam: const string): bool</span></div><div><span style="font-size: 14px;">+ letezikAFajl(f: const string): bool</span></div><div><span style="font-size: 14px;">+ bekerDatum(): Datum</span></div><div><span style="font-size: 14px;">+ sorBeker(t: const string): string</span></div><div><span style="font-size: 14px;">+ muveletFuttato(muvelet: MuveletAllapot (MainSegedFuggvenyei::)(Szerviz&amp;), aDB: SzervizNyilvantartoRendszer&amp;, sikerUzenet: const string): void</span></div><div><span style="font-size: 14px;">+ fajlMuveletFuttato(muvelet: MuveletAllapot (MainSegedFuggvenyei::)(bool, Szerviz&amp;), aDB: SzervizNyilvantartoRendszer&amp;, tipus: bool, sikerUzenet: const string): void</span></div><div><span style="font-size: 14px;">+ kiListazo(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ ugyfelAutoAdd(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ ugyfelAutoFrissit(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ ugyfelAutoTorlo(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ ugyfelKereses(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ autoKereses(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ ujSzervizMuvelet(aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div><div><span style="font-size: 14px;">+ fajlHelyessegBiztosito(mentesE: bool, aDB: SzervizNyilvantartoRendszer): MuveletAllapot</span></div></div></div></div></foreignObject><text x="1690" y="45" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ kiirASCII1(): void...</text></switch></g></g></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-13"><g><path d="M 1621.06 247.74 L 1656.82 247.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1681.81 247.11 L 1669.39 254.59 L 1656.82 247.37 L 1669.24 239.89 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-16"><g><path d="M 1754 490 L 1754.11 456.4" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1754.2 431.4 L 1761.51 443.92 L 1754.11 456.4 L 1746.8 443.87 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-17"><g><path d="M 1880 516 L 1880 490 L 2284 490 L 2284 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/><path d="M 1880 516 L 1880 560 L 2284 560 L 2284 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1880 516 L 2284 516" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 402px; height: 1px; padding-top: 503px; margin-left: 1881px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;"><b>Teszt</b></font></div></div></div></foreignObject><text x="2082" y="507" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">Teszt</text></switch></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-18"><g><rect x="1880" y="516" width="404" height="44" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 394px; height: 1px; padding-top: 523px; margin-left: 1886px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 40px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;">+ tesztDBLetrehozas(aDB: SzervizNyilvantartoRendszer): bool</pre><pre style="font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; font-size: 12.573px; margin-top: 0px !important; margin-bottom: 0px !important;">+ tesztek(): void</pre></div></div></div></foreignObject><text x="1886" y="535" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ tesztDBLetrehozas(aDB: SzervizNyilvantartoRendszer): bool...</text></switch></g></g></g></g><g data-cell-id="LQCTZ_gMf8q1peyGAlmS-19"><g><path d="M 2030 490 L 2030 455.99" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 2030 430.99 L 2037.35 443.49 L 2030 455.99 L 2022.65 443.49 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-7"><g><path d="M 1684 626 L 1684 600 L 2104 600 L 2104 626" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/><path d="M 1684 626 L 1684 1280 L 2104 1280 L 2104 626" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/><path d="M 1684 626 L 2104 626" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none" style="stroke: rgb(0, 0, 0);"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 607px; margin-left: 1685px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; "><font style="font-size: 16px;">Vector</font></div></div></div></foreignObject><text x="1894" y="619" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">Vector</text></switch></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-8"><g><rect x="1684" y="626" width="420" height="164" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 410px; height: 1px; padding-top: 633px; margin-left: 1690px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 160px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;"><font style="font-size: 14px;">- kapacitas: size_t<br />- meret: size_t<br />- tomb: T*</font></pre><pre style="font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;"><font style="font-size: 14px;">- copy_elements(const Vector&amp; src): void<br />- copy_elements_impl(const Vector&amp; src, std::true_type): void<br />- copy_elements_impl(const Vector&amp; src, std::false_type): void<br />- delete_elements(): void<br />- delete_elements_impl(std::true_type): void<br />- delete_elements_impl(std::false_type): void</font></pre></div></div></div></foreignObject><text x="1690" y="645" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- kapacitas: size_t...</text></switch></g></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-9"><g><path d="M 1684 794 L 2104 794" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-10"><g><rect x="1684" y="798" width="420" height="482" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 410px; height: 1px; padding-top: 805px; margin-left: 1690px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 478px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><pre style="font-family: var(--ds-font-family-code); overflow: auto; padding: calc(var(--ds-md-zoom)*8px)calc(var(--ds-md-zoom)*12px); text-wrap-mode: wrap; word-break: break-all; margin-top: 0px !important; margin-bottom: 0px !important;"><font style="font-size: 14px;">+ Vector()<br />+ Vector(const Vector&amp; v)<br />+ ~Vector()<br />+ begin(): T*<br />+ begin() const: const T*<br />+ end(): T*<br />+ end() const: const T*<br />+ operator=(const Vector&amp; v): Vector&amp;<br />+ operator==(const Vector&amp; v) const: bool<br />+ operator[](size_t idx): T&amp;<br />+ operator[](size_t idx) const: const T&amp;<br />+ size() const: size_t<br />+ capacity() const: size_t<br />+ empty() const: bool<br />+ resize(size_t ns, const T&amp; v = T()): void<br />+ reserve(size_t m): void<br />+ shrink_to_fit(): void<br />+ at(size_t idx): T&amp;<br />+ at(size_t idx) const: const T&amp;<br />+ front(): T&amp;<br />+ front() const: const T&amp;<br />+ back(): T&amp;<br />+ back() const: const T&amp;<br />+ push_back(const T&amp; v): void<br />+ pop_back(): void<br />+ insert(T* p, const T&amp; v): T*<br />+ erase(T* p): T*<br />+ clear(): void<br /></font></pre></div></div></div></foreignObject><text x="1690" y="817" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ Vector()...</text></switch></g></g></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-12"><g><rect x="2080" y="575" width="24" height="25" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-23"><g><rect x="2077" y="572.5" width="30" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 588px; margin-left: 2092px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; ">T</div></div></div></foreignObject><text x="2092" y="591" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">T</text></switch></g></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-24"><g><path d="M 1684.84 607.48 L 1580 607 L 1580 517.99" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1580 492.99 L 1587.35 505.49 L 1580 517.99 L 1572.65 505.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="fill: rgb(0, 0, 0); stroke: rgb(0, 0, 0);"/></g></g><g data-cell-id="nTeZpao95qQfzeXdizB5-25"><g><path d="M 1844.02 598.64 L 1841.64 459.21" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke" style="stroke: rgb(0, 0, 0);"/><path d="M 1841.22 434.21 L 1848.78 446.58 L 1841.64 459.21 L 1834.08 446.84 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all" style="stroke: rgb(0, 0, 0);"/></g></g></g></g></g></svg>